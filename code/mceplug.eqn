; GBS-8200 MCE Adapter
; Copyright (C) 2019 by Scorp (Necroware)
;
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, version 3.
;
; This program is distributed in the hope that it will be useful, but
; WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program. If not, see <http://www.gnu.org/licenses/>.
;
; Version: 0.6.0

CHIP MCE 16V8

gnd=10 ; Ground
vcc=20 ; +5V

; -----------------------------------------------------------------------------
; Input
; -----------------------------------------------------------------------------
b=1     ; Blue
v=2     ; V-Sync
g=3     ; Green
h=4     ; H-Sync
r=5     ; Red
bi=6    ; Blue intensity or white in MDA
ri=7    ; Red intensity
gi=8    ; Green intensity or intensity in MDA/CGA
/sw3=9  ; Switch sync invert
/sw2=11 ; Switch mode
/sw1=12 ; Switch color/mono

; -----------------------------------------------------------------------------
; Output
; -----------------------------------------------------------------------------
out_b=13  ; Blue
out_bi=14 ; Blue intensity
out_g=15  ; Green
out_gi=16 ; Green intensity
out_r=17  ; Red
out_ri=18 ; Red intensity
out_s=19  ; Combined HV-Sync

; -----------------------------------------------------------------------------
; Separated color components
; -----------------------------------------------------------------------------

@define mda "/sw1"
@define cga "sw1 * /sw2"
@define ega "sw1 * sw2"

; MDA has only one color and one intensity
; In mode1, the B/W monitor can be simulated by setting RGB to 1,1,1
; In mode2, the B/G monitor can be simulated by setting RGB to 0,1,0
@define mda_r "mda * bi * /sw2"
@define mda_g "mda * bi"
@define mda_b "mda * bi * /sw2"
@define mda_i "mda * gi"

; CGA has RGB color and one intensity
; It has a hack for brown color on R * G * /B * /I. We can simulate this
; in such combination by setting the green color to 0 and intensity to 1
@define cga_r  "cga * r"
@define cga_g1 "cga * g * /r"
@define cga_g2 "cga * g * b"
@define cga_g3 "cga * g * gi"
@define cga_b  "cga * b"
@define cga_i1 "cga * gi"
@define cga_i2 "cga * r * g * /b * /gi"

; EGA has RGB color and separate intensity for each channel
@define ega_r  "ega * r"
@define ega_g  "ega * g"
@define ega_b  "ega * b"
@define ega_ri "ega * ri"
@define ega_gi "ega * gi"
@define ega_bi "ega * bi"

; -----------------------------------------------------------------------------
EQUATIONS
; -----------------------------------------------------------------------------
out_s = /sw3 * v * h + /sw3 * /v * /h + sw3 * v * /h + sw3 * /v * h
out_r = mda_r + cga_r + ega_r
out_g = mda_g + cga_g1 + cga_g2 + cga_g3 + ega_g
out_b = mda_b + cga_b + ega_b
out_ri = mda_i + cga_i1 + ega_ri
out_gi = mda_i + cga_i1 + cga_i2 + ega_gi
out_bi = mda_i + cga_i1 + ega_bi

